% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Standardization.R
\name{log_plot2}
\alias{log_plot2}
\title{#***********************Label Top
#' Group By List
#'
#' @param df the data frame to be checked
#' @param label_col The column from which to pull top entries
#' @param value_col The column used to determine what counts as top
#' @param n=7 The number of top
#'
#' @return Group_By using a list of quoted names.
#'
#' @details Replacement for group_by_ now that it has been depricated.
#'
#' @export}
\usage{
log_plot2(
  plot,
  df,
  filename,
  xlsx,
  sheet,
  path = "..\\\\output",
  second_path = NA,
  width = 6.5,
  height = 3.5,
  output_doc_svg = TRUE,
  output_doc_png = FALSE,
  suppress_text = NA,
  startRow = 1,
  startCol = NA,
  format = TRUE,
  x_var = NA,
  y_var = NA,
  var_list = NA,
  csv_then_year = TRUE,
  excel_then_year = TRUE,
  excel_y_var = FALSE,
  excel_share = FALSE,
  excel_formulas = FALSE,
  hist_year = 2020,
  cur_year = 2023,
  group_unlabeled_facets = FALSE
)
}
\arguments{
\item{plot}{a ggplot object}

\item{df}{the underlying data}

\item{filename}{the name for the files, excluding extension}

\item{xlsx}{the excel file to output to}

\item{sheet}{the sheet to use in excel, typically shorter than the name}

\item{group_unlabeled_facets}{Whether to all unlabeled facets (but not colors) into a single line}

\item{path="..\\output\\"}{what directory for the output}

\item{second_path=NA}{for saving to a second location to automatically}

\item{width=6.5}{Width for the plot in inches}

\item{height=3.5}{Height for the plot in inches}

\item{output_doc_svg=TRUE}{GGsave a svg of the graph for a document?}

\item{output_doc_png=FALSE}{GGsave a png of the graph for a document?}

\item{suppress_text=NA}{Remove titles and captions. If unspecified, treated as TRUE for SVG and FALSE for PNG.}

\item{startRow=1}{Start row for excel output}

\item{startCol=NA}{Start column for excel output}

\item{format=TRUE}{Format the data rather then listing the df directl}

\item{x_var=NA}{Override option for x_var}

\item{y_var=NA}{Override option for y_var}

\item{var_list=NA}{Override option for what variables to include in addition to x_var and y_var, also sets arrangement order.}

\item{csv_then_year=TRUE}{Override the graphed y_var to include nominal dollars in csv output}

\item{excel_then_year=TRUE}{Override the graphed y_var to include nominal dollars in excel output}

\item{excel_y_var=FALSE}{Include the graphed y_var (or over)}

\item{excel_share=FALSE}{Include percent shares for the y_var for each of the facets}

\item{excel_formulas=FALSE}{Create formulas to accompany the table}

\item{hist_year=2015}{Historical anchor to include in summary stats}

\item{cur_year=2023}{Most recent complete year to include in summary stats}

\item{group_unlabeled_facets=FALSE}{Combine all unlabeled facet categories into a single line in the data.}
}
\value{
no value
}
\description{
colnames(platpscintldef)[colnames(platpscintldef)=="Action_Obligation_Then_Year_Then_Year"]<-
  "Action_Obligation_Then_Year"
}
\details{
topplat<-platpscintldef %>% group_by (Project.Name,PlatformPortfolio) %>%
  summarise(Action_Obligation_OMB24_GDP22=sum(Action_Obligation_OMB24_GDP22),
            Action_Obligation_2020=sum(if_else(Fiscal_Year==2020,Action_Obligation_OMB24_GDP22,0)))%>%
  group_by (PlatformPortfolio) %>%
  mutate(rank_total=rank(desc(Action_Obligation_OMB24_GDP22)),
         rank_2020=rank(desc(Action_Obligation_2020)))
topplat %>% arrange(desc(Action_Obligation_OMB24_GDP22))


topplat$TopProject<-
  if_else(topplat$rank_2020<=7 | topplat$rank_total<=7,topplat$Project.Name,NA)

platpscintldef<-left_join(platpscintldef,topplat %>% select(-Action_Obligation_OMB24_GDP22,Action_Obligation_2020),
                          by=c("Project.Name","PlatformPortfolio"))

platpscintldef$TopProject[is.na(platpscintldef$TopProject) & !is.na(platpscintldef$Project.Name)]<-
  "Other Labeled Project"


summary(factor(platpscintldef$TopProject))
Save a copy of the plot, a current dollars csv, and an excel copy
}
